#Использовать packageinfo
#Использовать fs

#Область ОписаниеПеременных

&ЛогDepos
Перем _Лог; // Лог

&Пластилин("ЛокаторМанифеста")
Перем _ЛокаторМанифеста; // ЛокаторМанифеста

#КонецОбласти

#Область Конструктор

&Желудь
Процедура ПриСозданииОбъекта()
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Определяет путь к файлу манифеста на основе переданного пути.
//
// Выполняет поиск файла манифеста по следующему алгоритму:
// 1. Если путь не указан - ищет файл packagedef в текущем каталоге
// 2. Если путь указывает на каталог - добавляет к нему имя файла packagedef
// 3. Если путь указывает на файл - возвращает его как есть
//
// Параметры:
//   Путь - Строка - Путь к файлу манифеста или каталогу, содержащему манифест.
//                   Если не заполнен, поиск выполняется в текущем каталоге
//
// Возвращаемое значение:
//   Строка - Полный путь к файлу манифеста
//
// Исключения:
//   - Если не найден файл манифеста в текущем каталоге (когда Путь не указан)
Функция ОпределитьФайлМанифеста(Путь) Экспорт

	Если ЗначениеЗаполнено(Путь) Тогда
		Если ФС.КаталогСуществует(Путь) Тогда
			Возврат ФС.ПолныйПуть(ОбъединитьПути(Путь, "packagedef"));
		Иначе
			Возврат Путь;
		КонецЕсли;
	КонецЕсли;
	
	ФайлМанифеста = _ЛокаторМанифеста.НайтиТекущемКаталоге();
	Если Не ЗначениеЗаполнено(ФайлМанифеста) Тогда
		ВызватьИсключение "Не найден файл манифеста в текущем каталоге";
	КонецЕсли;
	
	Возврат ФайлМанифеста;
	
КонецФункции

// Читает информацию о зависимостях из файла манифеста пакета.
//
// Параметры:
//   ПутьКФайлу - Строка - Полный путь к файлу манифеста (packagedef)
//
// Возвращаемое значение:
//   ТаблицаЗначений - Таблица с информацией о зависимостях пакета:
//     * ИмяПакета - Строка - Имя пакета-зависимости
//     * ДляРазработки - Булево - Признак зависимости для разработки
//     * МинимальнаяВерсия - Строка - Минимально допустимая версия пакета
//     * МаксимальнаяВерсия - Строка - Максимально допустимая версия пакета
//
// Исключения:
//   - Если файл манифеста не существует по указанному пути
//   - Если возникла ошибка при парсинге файла манифеста
Функция ПрочитатьЗависимостиИзМанифеста(ПутьКФайлу) Экспорт

	Если Не ФС.ФайлСуществует(ПутьКФайлу) Тогда
		ВызватьИсключение СтрШаблон("Не найден файл манифеста '%1'", ПутьКФайлу);
	КонецЕсли;

	_Лог.Отладка("Чтение зависимостей из файла манифеста '%1'", ПутьКФайлу);

	Попытка		
		ИнформацияОПакете = Новый ИнформацияОПакете(ПутьКФайлу);
	Исключение
		_Лог.Отладка(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ВызватьИсключение СтрШаблон(
			"Возникла ошибка при получении зависимостей из файла манифеста '%1'",
			ПутьКФайлу
		);
	КонецПопытки;

	Возврат ИнформацияОПакете.Зависимости();

КонецФункции

#КонецОбласти