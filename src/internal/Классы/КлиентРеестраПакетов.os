#Использовать 1connector

&Пластилин("НастройкиПриложения")
Перем _НастройкиПриложения; // НастройкиПриложения

&Пластилин("ПарсерСтраницыПакета")
Перем _ПарсерСтраницыПакета; // ПарсерСтраницыПакета

&ЛогDepos
Перем _Лог; // Лог

&Желудь
Процедура ПриСозданииОбъекта()
КонецПроцедуры

// Получает версии пакета с автоматическим переключением на резервный хост при недоступности основного
//
// Параметры:
//   ИмяПакета - Строка - Имя пакета
//
// Возвращаемое значение:
//   Массив из Строка - Массив версий пакета
//
// Вызывает исключение:
//   Если не удалось получить версии ни с основного, ни с резервного хоста
Функция ПолучитьВерсии(ИмяПакета) Экспорт
	
	МассивХостов = _НастройкиПриложения.ХостыРепозитория();
	
	Если МассивХостов.Количество() = 0 Тогда
		ВызватьИсключение "Не заданы хосты репозитория в настройках приложения";
	КонецЕсли;

	Для Каждого Хост Из МассивХостов Цикл
		_Лог.Отладка(
			"Попытка получения версий пакета '%1' с хоста: %2", 
			ИмяПакета,
			Хост
		);

		Попытка
			ТекстСтраницы = КоннекторHTTP.Get(АдресСтраницыПакета(ИмяПакета, Хост)).Текст();
			ВерсииПакета = _ПарсерСтраницыПакета.ИзвлечьВерсии(ТекстСтраницы);

			_Лог.Отладка(
				"Успешно получено %1 версий пакета '%2' с хоста: %3", 
				ВерсииПакета.Количество(),
				ИмяПакета,
				Хост
			);
			Возврат ВерсииПакета;
		Исключение
			_Лог.Ошибка(
				"Ошибка получения версий пакета '%1' с хоста: %2", 
				ИмяПакета,
				КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
			);
			Продолжить;
		КонецПопытки;
	КонецЦикла;

	ВызватьИсключение СтрШаблон("Не удалось получить версии пакета '%1'", ИмяПакета);

КонецФункции

Функция АдресСтраницыПакета(ИмяПакета, Хост)
	Возврат СтрШаблон("https://%1/package/%2", Хост, ИмяПакета);
КонецФункции