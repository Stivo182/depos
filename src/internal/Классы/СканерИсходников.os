#Область ОписаниеПеременных

&ЛогDepos
Перем _Лог; // Лог

Перем _РегулярноеВыражениеИспользовать; // РегулярноеВыражение

#КонецОбласти

#Область Конструктор

&Желудь
Процедура ПриСозданииОбъекта()
	
	_РегулярноеВыражениеИспользовать = Новый РегулярноеВыражение("^\s*#(Использовать|Use)\s+([a-zA-Z0-9\-_]+).*");
	_РегулярноеВыражениеИспользовать.Многострочный = Истина;
	_РегулярноеВыражениеИспользовать.ИгнорироватьРегистр = Истина;

КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Сканирует указанные каталоги и находит использованные пакеты
//
// Параметры:
//   Каталоги - Строка, Массив из Строка - Пути к каталогам для сканирования
//
// Возвращаемое значение:
//   ТаблицаЗначений:
//     * ИмяПакета - Строка - Имя пакета
//     * Файл - Строка - Путь к файлу
Функция НайтиПакеты(Каталоги) Экспорт

	Результат = ПустаяТаблицаРезультата();
	
	Если ТипЗнч(Каталоги) = Тип("Массив") Тогда
		КаталогиДляСканирования = Новый Массив();
		Для Каждого Каталог Из Каталоги Цикл
			КаталогиДляСканирования.Добавить(Каталог);
		КонецЦикла;
	Иначе
		КаталогиДляСканирования = СтрРазделить(Каталоги, ",");
	КонецЕсли;

	Для Каждого Каталог Из КаталогиДляСканирования Цикл
		СканироватьКаталог(Каталог, Результат);
	КонецЦикла;

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СканироватьКаталог(Каталог, Результат)
	
	_Лог.Отладка("Сканирование каталога: %1", Каталог);
	
	Попытка
		Файлы = НайтиФайлы(Каталог, "*.os", Истина);
	Исключение
		_Лог.Предупреждение(
			"Не удалось сканировать каталог '%1': %2", 
			Каталог,
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		Возврат;
	КонецПопытки;

	Для Каждого Файл Из Файлы Цикл
		СканироватьФайл(Файл.ПолноеИмя, Результат);
	КонецЦикла;
	
КонецПроцедуры

Процедура СканироватьФайл(ПутьКФайлу, Результат)
	
	_Лог.Отладка("Сканирование файла: %1", ПутьКФайлу);
	
	Попытка
		ЧтениеТекста = Новый ЧтениеТекста(ПутьКФайлу, КодировкаТекста.UTF8);
		Содержимое = ЧтениеТекста.Прочитать();
		ЧтениеТекста.Закрыть();
	Исключение
		_Лог.Предупреждение(
			"Не удалось прочитать файл '%1': %2", 
			ПутьКФайлу, 
			КраткоеПредставлениеОшибки(ИнформацияОбОшибке())
		);
		Возврат;
	КонецПопытки;

	Совпадения = _РегулярноеВыражениеИспользовать.НайтиСовпадения(Содержимое);
	Для Каждого Совпадение Из Совпадения Цикл	
		ИмяПакета = НРег(Совпадение.Группы[2].Значение);

		СтрокаТаблицы = Результат.Добавить();
		СтрокаТаблицы.ИмяПакета = ИмяПакета;
		СтрокаТаблицы.Файл = ПутьКФайлу;
	КонецЦикла;
	
КонецПроцедуры

Функция ПустаяТаблицаРезультата()
	
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("ИмяПакета");
	Таблица.Колонки.Добавить("Файл");

	Возврат Таблица;

КонецФункции

#КонецОбласти
