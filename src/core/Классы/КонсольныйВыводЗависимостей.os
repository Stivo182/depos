#Использовать coloratos
#Использовать semver
#Использовать "../../internal"

&Пластилин("НастройкиФорматирования")
Перем _НастройкиФорматирования; // НастройкиФорматирования

#Область Конструктор

&Желудь
Процедура ПриСозданииОбъекта()
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Выводит таблицу изменений зависимостей в консоль в режиме проверки доступных обновлений.
//
// Параметры:
//   ИзмененияЗависимостей - ТаблицаЗначений - см. ЗависимостиПакета.ВычислитьИзменения
Процедура ВывестиКакПроверенные(ИзмененияЗависимостей) Экспорт
	Вывести(ИзмененияЗависимостей, Ложь);
КонецПроцедуры

// Выводит таблицу изменений зависимостей в консоль в режиме подтверждения выполненных обновлений.
//
// Параметры:
//   ИзмененияЗависимостей - ТаблицаЗначений - см. ЗависимостиПакета.ВычислитьИзменения
Процедура ВывестиКакОбновленные(ИзмененияЗависимостей) Экспорт
	Вывести(ИзмененияЗависимостей, Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура Вывести(ИзмененияЗависимостей, Обновлено)

	ИзмененияЗависимостей.Сортировать("ДляРазработки, ИмяПакета");

	ДлиныКолонок = Новый Структура(
		"ИмяПакета, ИсходнаяВерсия", 
		МаксимальнаяДлинаВКолонке("ИмяПакета", ИзмененияЗависимостей), 
		МаксимальнаяДлинаВКолонке("МинимальнаяВерсияДо", ИзмененияЗависимостей)
	);

	Для Каждого СтрокаИзменения Из ИзмененияЗависимостей Цикл
		ВывестиСтрокуПакета(СтрокаИзменения, ДлиныКолонок, Обновлено);
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиСтрокуПакета(СтрокаИзменения, ДлиныКолонок, Обновлено)

	ВерсияДо = СтрокаИзменения.МинимальнаяВерсияДо;
	ВерсияПосле = СтрокаИзменения.МинимальнаяВерсияПосле;
	
	ТекущаяВерсия = ?(ЗначениеЗаполнено(ВерсияДо), ВерсияДо, "*");
	ТекстДляРазработки = ?(СтрокаИзменения.ДляРазработки, _НастройкиФорматирования.ТекстДляРазработки, "");
	ТребуетсяОбновление = ТребуетсяОбновлениеДляВерсии(
		ВерсияДо, 
		ВерсияПосле
	);
	СимволОбновления = ?(Обновлено, НаборСимволов.ОК, НаборСимволов.СтрелкаВверх);
	ЦветСимволаОбновления = ?(Обновлено, 
		_НастройкиФорматирования.ЦветСимволаВыполненногоОбновления,
		_НастройкиФорматирования.ЦветСимволаНаличияОбновления
	);
	
	Консоль.Вывести(" ");

	// Символ обновления
	ЦветнойВывод.Вывести(?(ТребуетсяОбновление, СимволОбновления, " "), ЦветСимволаОбновления);
	
	// Имя пакета
	Консоль.Вывести(ФиксированнаяСтрока(СтрокаИзменения.ИмяПакета, ДлиныКолонок.ИмяПакета, , , Истина));

	// Признак для разработки
	ТекстДляРазработкиФорматированный = ФиксированнаяСтрока(
		ТекстДляРазработки, 
		СтрДлина(_НастройкиФорматирования.ТекстДляРазработки), 
		, 
		, 
		Истина
	);
	Консоль.Вывести(ТекстДляРазработкиФорматированный);

	Консоль.Вывести(" ");

	// Текущая версия
	Консоль.Вывести(ФиксированнаяСтрока(ТекущаяВерсия, ДлиныКолонок.ИсходнаяВерсия));

	Консоль.Вывести(СтрШаблон(" %1 ", НаборСимволов.СтрелкаВправо));

	// Целевая версия
	ВывестиЦелевуюВерсию(ВерсияПосле, ВерсияДо);

КонецПроцедуры

Процедура ВывестиЦелевуюВерсию(ЦелеваяВерсия, ИсходнаяВерсия)

	ИсходнаяВерсияОбъект = Новый Версия(ИсходнаяВерсия);
	ЦелеваяВерсияОбъект = Новый Версия(ЦелеваяВерсия);
	ЕстьПатчВерсия = СтрЧислоВхождений(ЦелеваяВерсия, ".") > 1;

	ОбычнаяЧасть = "";
	ЦветнаяЧасть = "";
	Цвет = "Серый";
	
	Если Не ЗначениеЗаполнено(ЦелеваяВерсия) Тогда
		ЦветнаяЧасть = _НастройкиФорматирования.ПустаяВерсия;
	ИначеЕсли Не ЗначениеЗаполнено(ИсходнаяВерсия) Тогда
		ЦветнаяЧасть = ЦелеваяВерсия;
	ИначеЕсли ИсходнаяВерсияОбъект.Основная <> ЦелеваяВерсияОбъект.Основная Тогда
		Цвет = _НастройкиФорматирования.ЦветМажорнойЧасти;
		ЦветнаяЧасть = ЦелеваяВерсия;
	ИначеЕсли ИсходнаяВерсияОбъект.Второстепенная <> ЦелеваяВерсияОбъект.Второстепенная Тогда
		Цвет = _НастройкиФорматирования.ЦветМинорнойЧасти;
		ОбычнаяЧасть = СтрШаблон("%1.", ЦелеваяВерсияОбъект.Основная);

		Если ЕстьПатчВерсия Тогда
			ЦветнаяЧасть = СтрШаблон("%1.%2", ЦелеваяВерсияОбъект.Второстепенная, ЦелеваяВерсияОбъект.Патч);
		Иначе
			ЦветнаяЧасть = ЦелеваяВерсияОбъект.Второстепенная;
		КонецЕсли;
	ИначеЕсли ЕстьПатчВерсия И ИсходнаяВерсияОбъект.Патч <> ЦелеваяВерсияОбъект.Патч Тогда
		Цвет = _НастройкиФорматирования.ЦветПатчЧасти;
		ОбычнаяЧасть = СтрШаблон("%1.%2.", ЦелеваяВерсияОбъект.Основная, ЦелеваяВерсияОбъект.Второстепенная);
		ЦветнаяЧасть = ЦелеваяВерсияОбъект.Патч;
	Иначе
		ОбычнаяЧасть = ЦелеваяВерсия;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЦветнаяЧасть) Тогда
		Текст = СтрШаблон("%1(%2|#color=%3)", ОбычнаяЧасть, ЦветнаяЧасть, Цвет);
	Иначе
		Текст = ОбычнаяЧасть;
	КонецЕсли;

	ЦветнойВывод.ВывестиСтроку(Текст);

КонецПроцедуры

Функция МаксимальнаяДлинаВКолонке(ИмяКолонки, Таблица)
	
	МаксДлина = 0;

	Для Каждого Строка Из Таблица Цикл
		МаксДлина = Макс(МаксДлина, СтрДлина(Строка[ИмяКолонки]));
	КонецЦикла;

	Возврат МаксДлина;
	
КонецФункции

Функция ФиксированнаяСтрока(
	Знач Строка, 
	Знач ТребуемаяДлина,
	ПоложениеПраво = Ложь,
	ЗаполняемыйСимвол = " ",
	ОборачиватьЗаполняемымСимволом = Ложь)
	
	КоличествоСимволов = ТребуемаяДлина - СтрДлина(Строка);
	Если КоличествоСимволов < 0 Тогда
		Возврат Строка;
	КонецЕсли;

	ДобавочныеСимволы = Новый Массив();
	Для Инд = 1 По КоличествоСимволов Цикл
		ДобавочныеСимволы.Добавить(ЗаполняемыйСимвол);
	КонецЦикла;
	
	ДобавочныеСимволы = СтрСоединить(ДобавочныеСимволы);

	Если ПоложениеПраво Тогда
		Строка = "" + ДобавочныеСимволы + Строка;
	Иначе
		Строка = "" + Строка + ДобавочныеСимволы;
	КонецЕсли;
	
	Если ОборачиватьЗаполняемымСимволом Тогда
		Строка = ЗаполняемыйСимвол + Строка + ЗаполняемыйСимвол;
	КонецЕсли;

	Возврат Строка;

КонецФункции

Функция ТребуетсяОбновлениеДляВерсии(ИсходнаяВерсия, ЦелеваяВерсия)

	Возврат ЗначениеЗаполнено(ЦелеваяВерсия) 
		И ЗначениеЗаполнено(ИсходнаяВерсия)
		И Версии.ВерсияБольше(ЦелеваяВерсия, Новый Версия(ИсходнаяВерсия));

КонецФункции

#КонецОбласти