#Использовать coloratos

#Область Опции

&Опция(Имя = "p packagedef", Описание = "Путь к файлу packagedef или его каталогу (по умолчанию - текущая директория)")
&ТСтрока
Перем _ФайлМанифеста; // Строка

&Опция(Имя = "src-dirs", Описание = "Каталоги с исходным кодом для анализа")
&ТСтрока
&ПоУмолчанию("src")
Перем _КаталогиИсходников; // Строка

&Опция(Имя = "dev-dirs", Описание = "Каталоги с вспомогательным кодом для анализа")
&ТСтрока
&ПоУмолчанию("tests,tasks")
Перем _КаталогиВспомогательныхИсходников; // Строка

&Опция(Имя = "ignore-dev", Описание = "Игнорировать зависимости для разработки при анализе")
&Флаг
&ПоУмолчанию(Ложь)
Перем _ИгнорироватьЗависимостиДляРазработки; // Булево

&Опция(Имя = "strict", Описание = "Завершать выполнение с ненулевым кодом при обнаружении проблем")
&Флаг
&ПоУмолчанию(Ложь)
Перем _СтрогийРежим; // Булево

#КонецОбласти

#Область ОписаниеПеременных

&ЛогDepos
Перем _Лог; // Лог

&Пластилин("Поделка")
Перем _Поделка; // Поделка

&Пластилин("НастройкиПриложения")
Перем _НастройкиПриложения; // НастройкиПриложения

&Пластилин("ПомощникМанифеста")
Перем _ПомощникМанифеста; // ПомощникМанифеста

&Пластилин("КонсольныйВыводРезультатовАнализа")
Перем _КонсольныйВыводРезультатовАнализа; // КонсольныйВыводРезультатовАнализа

#КонецОбласти

&КомандаПриложения(Имя = "doctor", Описание = "Диагностика зависимостей")
Процедура ПриСозданииОбъекта()
КонецПроцедуры

&ВыполнениеКоманды
Процедура ЗапуститьБезопасно() Экспорт

	Попытка
		Запустить();
	Исключение
		_Лог.Отладка(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		_Лог.Ошибка(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Если _НастройкиПриложения.РежимОтладки Тогда
			Консоль.ВывестиСтроку(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Иначе
			ЗавершитьРаботу(1);
		КонецЕсли;
	КонецПопытки;

КонецПроцедуры

Процедура Запустить()

	АнализаторЗависимостей = _Поделка.НайтиЖелудь("АнализаторЗависимостей");	
	ФайлМанифеста = _ПомощникМанифеста.ОпределитьФайлМанифеста(_ФайлМанифеста);

	Консоль.ВывестиСтроку(СтрШаблон("Диагностика зависимостей: %1" + Символы.ПС, ФайлМанифеста));

	АнализаторЗависимостей
		.УстановитьФайлМанифеста(ФайлМанифеста)
		.УстановитьКаталогиИсходников(_КаталогиИсходников);

	Если Не _ИгнорироватьЗависимостиДляРазработки Тогда
		АнализаторЗависимостей.УстановитьКаталогиДляРазработки(_КаталогиВспомогательныхИсходников);
	Иначе
		АнализаторЗависимостей.ИсключитьЗависимостиДляРазработки();
	КонецЕсли;

	РезультатАнализа = АнализаторЗависимостей.ПроверитьЗависимости();

	_КонсольныйВыводРезультатовАнализа.Вывести(РезультатАнализа);

	Если Не _НастройкиПриложения.РежимОтладки Тогда
		ЗавершитьРаботу(ОпределитьКодВозврата(РезультатАнализа));
	КонецЕсли;

КонецПроцедуры

Функция ОпределитьКодВозврата(РезультатАнализа)

	Если _СтрогийРежим И РезультатАнализа.ЕстьПроблемы() Тогда
		Возврат 1;
	КонецЕсли;

	Возврат 0;

КонецФункции