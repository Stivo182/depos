#Использовать coloratos
#Использовать "../../core"
#Использовать "../../internal"

#Область Опции

&Опция(Имя = "p packagedef", Описание = "Путь к файлу packagedef или его каталогу (по умолчанию - текущая директория)")
&ТСтрока
Перем _ФайлМанифеста; // Строка, Неопределено

&Опция(
	Имя = "f filter",
	Описание = "Фильтр пакетов по именам (через запятую или пробел), шаблону (*, ?) или регулярному выражению (например, /^autumn-.*$/)"
)
&ТСтрока
Перем _ФильтрПоИмени; // Строка

&Опция(Имя = "t target", Описание = "Тип целевой версии")
&ПоУмолчанию("Последняя")
&ТПеречисление
&Перечисление(
	Имя = "latest",
	Значение = "Последняя",
	Описание = "Последняя доступная версия пакета"
)
&Перечисление(
	Имя = "minor",
	Значение = "Минорная",
	Описание = "Последняя минорная или патч-версия в пределах основной версии"
)
&Перечисление(
	Имя = "patch",
	Значение = "Патч",
	Описание = "Последняя патч-версия в пределах минорной версии"
)
Перем _ТипВерсии; // Строка, Неопределено

&Опция(Имя = "backup", Описание = "Создать резервную копию файла packagedef перед изменением")
&Флаг
&ПоУмолчанию(Ложь)
Перем _СохранятьКопию; // Булево

&Опция(Имя = "o output", Описание = "Экспорт отчета об обновлениях в JSON-файл (.json)")
&ТСтрока
Перем _ИмяФайлаВывода; // Строка

#КонецОбласти

#Область ОписаниеПеременных

&ЛогDepos
Перем _Лог; // Лог

&Пластилин("Поделка")
Перем _Поделка; // Поделка

&Пластилин("НастройкиПриложения")
Перем _НастройкиПриложения; // НастройкиПриложения

&Пластилин("ЛокаторМанифеста")
Перем _ЛокаторМанифеста; // ЛокаторМанифеста

&Пластилин("КонсольныйВыводЗависимостей")
Перем _КонсольныйВыводЗависимостей; // КонсольныйВыводЗависимостей

#КонецОбласти

&КомандаПриложения(Имя = "upgrade", Описание = "Обновление зависимостей")
Процедура ПриСозданииОбъекта()
КонецПроцедуры

&ВыполнениеКоманды
Процедура ЗапуститьБезопасно() Экспорт

	Попытка
		Запустить();
	Исключение
		_Лог.Отладка(ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		_Лог.Ошибка(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		Если _НастройкиПриложения.РежимОтладки Тогда
			Консоль.ВывестиСтроку(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Иначе
			ЗавершитьРаботу(1);
		КонецЕсли;
	КонецПопытки;

КонецПроцедуры

Процедура Запустить()
		
	ОпределительВерсийЗависимостей = _Поделка.НайтиЖелудь("ОпределительВерсийЗависимостей");
	ОбновляторЗависимостей = _Поделка.НайтиЖелудь("ОбновляторЗависимостей");
	ФайлМанифеста = _ЛокаторМанифеста.Определить(_ФайлМанифеста);

	Консоль.ВывестиСтроку(СтрШаблон("Обновление зависимостей: %1" + Символы.ПС, ФайлМанифеста));

	ИсходныеЗависимости = Новый ЗависимостиПакета()
		.ПрочитатьИзМанифеста(ФайлМанифеста)
		.ФильтроватьПоИмени(_ФильтрПоИмени);

	ЦелевыеЗависимости = ОпределительВерсийЗависимостей
		.ТолькоУстаревшие()
		.НайтиВерсии(ИсходныеЗависимости, _ТипВерсии);

	Если ЦелевыеЗависимости.Пустой() Тогда
		ЦветнойВывод.ВывестиСтроку("Не найдены зависимости для обновления", "ТемноЖелтый");
		Возврат;
	КонецЕсли;

	ИзмененияЗависимостей = ЦелевыеЗависимости.ВычислитьИзменения(ИсходныеЗависимости);
		
	_КонсольныйВыводЗависимостей.ВывестиКакОбновленные(ИзмененияЗависимостей);

	ОбновляторЗависимостей
		.СохранятьКопию(_СохранятьКопию)
		.Обновить(ФайлМанифеста, ЦелевыеЗависимости);

	Консоль.ВывестиСтроку(" ");
	ЦветнойВывод.ВывестиСтроку("Выполните (opm install|#color=Желтый) для установки новых версий пакетов.");

	Если ЗначениеЗаполнено(_ИмяФайлаВывода) Тогда
		Экспортер = Новый ЭкспортерИзмененийЗависимостей();
		Экспортер.Записать(ИзмененияЗависимостей, _ИмяФайлаВывода);
	КонецЕсли;

КонецПроцедуры