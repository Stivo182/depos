#Использовать autumn
#Использовать asserts
#Использовать tempfiles
#Использовать "../src/core"
#Использовать "helpers"
#Использовать "mocks"

Перем Поделка;

&Инициализация
Процедура Инициализация() Экспорт

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

КонецПроцедуры

&После
Процедура ПослеКаждого() Экспорт
	ПомощникТестирования.УдалитьВременныеФайлы();
КонецПроцедуры

&Тест
Процедура ТестДолжен_ОбновитьЗависимостиИзТаблицы() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла(ПомощникТестирования.ФайлМанифеста);

	// Действие
	ОбновляторЗависимостей
		.ДляФайла(ФайлМанифеста)
		.ЗависитОтПакетов(ОбновленныеЗависимости())
		.Обновить();

	// Проверка
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, ПомощникТестирования.ФайлОбновленногоМанифеста);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ОбновитьЗависимостиПоСтрокам() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла(ПомощникТестирования.ФайлМанифеста);

	// Действие
	ОбновляторЗависимостей
		.ДляФайла(ФайлМанифеста)
		.ЗависитОт("annotations", "1.3.1")
		.ЗависитОт("packageinfo", "0.8")
		.ЗависитОт("autumn", "4.3.11")
		.РазработкаЗависитОт("1testrunner", "1.9.2")
		.Обновить();

	// Проверка
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, ПомощникТестирования.ФайлОбновленногоМанифеста);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПовторноеДобавлениеЗависимости() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла(ПомощникТестирования.ФайлМанифеста);

	// Действие
	ОбновляторЗависимостей
		.ДляФайла(ФайлМанифеста)
		.ЗависитОтПакетов(ОбновленныеЗависимости())
		.ЗависитОт("delegate", "2.0.0")
		.ЗависитОт("delegate", "1.0.0")
		.Обновить();

	// Проверка
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, ПомощникТестирования.ФайлОбновленногоМанифеста);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьСохранностьПриПередачеПустойВерсии() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла(ПомощникТестирования.ФайлМанифеста);

	// Действие
	ОбновляторЗависимостей
		.ДляФайла(ФайлМанифеста)
		.ЗависитОтПакетов(ОбновленныеЗависимости())
		.ЗависитОт("delegate", "")
		.Обновить();

	// Проверка
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, ПомощникТестирования.ФайлОбновленногоМанифеста);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПрерываниеПриОтсутствииПереданныхЗависимостей() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла(ПомощникТестирования.ФайлМанифеста);

	// Действие
	ОбновляторЗависимостей
		.ДляФайла(ФайлМанифеста)
		.Обновить();

	// Проверка
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, ПомощникТестирования.ФайлМанифеста);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьПрерываниеПриОтсутствииЗависимостейВМанифестеИБезПередачиЗависимостей() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла("./tests/fixtures/packagedef-no-deps");

	// Действие
	ОбновляторЗависимостей
		.ДляФайла(ФайлМанифеста)
		.Обновить();

	// Проверка
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, "./tests/fixtures/packagedef-no-deps");

КонецПроцедуры


&Тест
Процедура ТестДолжен_ПроверитьВыбрасываниеИсключенияПриОтсутствииЗависимостейВМанифестеИПередачеЗависимости() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла("./tests/fixtures/packagedef-no-deps");

	ОбновляторЗависимостей.ДляФайла(ФайлМанифеста).ЗависитОт("autumn", "1.0.0");

	// Действие и проверка
	Ожидаем
		.Что(ОбновляторЗависимостей)
		.Метод("Обновить")
		.ВыбрасываетИсключение("Не удалось выполнить обновление зависимостей. Проверка зависимостей закончилось неудачей: не найдена зависимость 'autumn' в файле манифеста.");

	// Проверяем неизменность манифеста
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, "./tests/fixtures/packagedef-no-deps");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыбрасываниеИсключенияПриПередачеОтсутствующейВМанифестеЗависимости() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла(ПомощникТестирования.ФайлМанифеста);

	ОбновляторЗависимостей.ДляФайла(ФайлМанифеста).ЗависитОт("unknown", "1.0.0");

	// Действие и проверка
	Ожидаем
		.Что(ОбновляторЗависимостей)
		.Метод("Обновить")
		.ВыбрасываетИсключение("Не удалось выполнить обновление зависимостей. Проверка зависимостей закончилось неудачей: не найдена зависимость 'unknown' в файле манифеста.");

	// Проверяем содержимое манифеста
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(ФайлМанифеста, ПомощникТестирования.ФайлМанифеста);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыбрасываниеИсключенияКогдаНеУказанМанифест() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	// Действие и проверка
	Ожидаем
		.Что(ОбновляторЗависимостей)
		.Метод("Обновить")
		.ВыбрасываетИсключение("Не указан файл манифеста");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыбрасываниеИсключенияПриПередачеНесуществующегоМанифеста() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");
	ОбновляторЗависимостей.ДляФайла("./tests/fixtures/unknown");

	// Действие и проверка
	Ожидаем
		.Что(ОбновляторЗависимостей)
		.Метод("Обновить")
		.ВыбрасываетИсключение("Не найден файл манифеста './tests/fixtures/unknown'");

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьСохранениеРезервнойКопии() Экспорт

	// Подготовка
	ОбновляторЗависимостей = Поделка.НайтиЖелудь("ОбновляторЗависимостей");

	ФайлМанифеста = ПомощникТестирования.СоздатьВременнуюКопиюФайла(ПомощникТестирования.ФайлМанифеста);

	// Действие
	ОбновляторЗависимостей
		.ДляФайла(ФайлМанифеста)	
		.ЗависитОт("autumn", "4.3.11")
		.СохранятьКопию()
		.Обновить();

	// Проверка
	Файл = Новый Файл(ФайлМанифеста);
	Маска = Файл.Имя + "_" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd") + "*";
	НайденныеФайлы = НайтиФайлы(Файл.Путь, Маска);

	// Проверяем наличие резервной копии
	Ожидаем.Что(НайденныеФайлы).Заполнено();

	// Проверяем содержимое резервной копии манифеста
	ПомощникТестирования.ОжидаемЧтоФайлыИдентичны(НайденныеФайлы[0].ПолноеИмя, ПомощникТестирования.ФайлМанифеста);

КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

Функция ОбновленныеЗависимости()

	Зависимости = Поделка.НайтиЖелудь("ОпределительВерсийЗависимостей")
		.ИзФайла(ПомощникТестирования.ФайлМанифеста)
		.ТолькоУстаревшие()
		.УстановитьТипВерсии(ТипыВерсий.Последняя)
		.Получить();

	Зависимости.Колонки.Удалить("МинимальнаяВерсия");
	Зависимости.Колонки.ЦелеваяВерсия.Имя = "МинимальнаяВерсия";

	Возврат Зависимости;

КонецФункции

#КонецОбласти