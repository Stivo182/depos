#Использовать "helpers"

Перем Поделка; // Поделка
Перем ПотокВывода; // ПотокВПамяти
Перем ТекущийКаталог; // Строка

&Инициализация
Процедура Инициализация() Экспорт
	ТекущийКаталог = ТекущийКаталог();
КонецПроцедуры

&Перед
Процедура ПередКаждым() Экспорт
	ПотокВывода = ПомощникТестирования.ПерехватитьПотокВывода();
КонецПроцедуры

&После
Процедура ПослеКаждого() Экспорт
	ПомощникТестирования.ВернутьПотокВывода();
	УстановитьТекущийКаталог(ТекущийКаталог);
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводРезультатаАнализаВТекущемКаталоге() Экспорт

	// Подготовка
	ОжидаемыйВывод = ОжидаемыйВыводРезультатаАнализа();

	УстановитьТекущийКаталог("./tests/fixtures/ПроектДляАнализа");

	Поделка = ПомощникТестирования.ОтладочнаяПоделка();
	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("doctor");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводРезультатаАнализаВУказанномКаталоге() Экспорт

	// Подготовка
	ОжидаемыйВывод = ОжидаемыйВыводРезультатаАнализа();

	Поделка = ПомощникТестирования.ОтладочнаяПоделка();
	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("doctor");
	ПараметрыКоманды.Добавить("--packagedef");
	ПараметрыКоманды.Добавить("./tests/fixtures/ПроектДляАнализа");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводРезультатаАнализаСУказаннымМанифестом() Экспорт

	// Подготовка
	ОжидаемыйВывод = ОжидаемыйВыводРезультатаАнализа();

	Поделка = ПомощникТестирования.ОтладочнаяПоделка();
	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("doctor");
	ПараметрыКоманды.Добавить("--packagedef");
	ПараметрыКоманды.Добавить("./tests/fixtures/ПроектДляАнализа/packagedef");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводРезультатаАнализаСУказаннымиКаталогамиИсходников() Экспорт

	// Подготовка
	ОжидаемыйВывод = ОжидаемыйВыводРезультатаАнализа();

	Поделка = ПомощникТестирования.ОтладочнаяПоделка();
	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("doctor");
	ПараметрыКоманды.Добавить("--packagedef");
	ПараметрыКоманды.Добавить("./tests/fixtures/ПроектДляАнализа/packagedef");
	ПараметрыКоманды.Добавить("--src-dirs");
	ПараметрыКоманды.Добавить(ФС.ПолныйПуть("./tests/fixtures/ПроектДляАнализа/src"));
	ПараметрыКоманды.Добавить("--dev-dirs");
	ПараметрыКоманды.Добавить(ФС.ПолныйПуть("./tests/fixtures/ПроектДляАнализа/tests"));

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьИгнорированиеЗависимостейДляРазработки() Экспорт

	// Подготовка
	ОжидаемыйВывод = 
	"❌ Отсутствующие пакеты в манифесте:
	|
	|   • present_in_dev_src_tests
	|     - %1\src\Классы\Класс1.os
	|   • present_in_dev_src_missing_tests
	|     - %1\src\Классы\Класс1.os
	|   • missing_manifests_present_src_tests
	|     - %1\src\Классы\Класс1.os
	|     - %1\src\Классы\Класс2.os
	|   • missing_manifests_present_src
	|     - %1\src\Классы\Класс1.os
	|
	|⚠  Неиспользуемые пакеты в коде:
	|
	|   • present_in_prod_tests_missing_src
	|   • present_in_prod_missing_src_tests
	|
	|Найдено проблем: 6";
	ПодготовитьОжидаемыйВывод(ОжидаемыйВывод);

	Поделка = ПомощникТестирования.ОтладочнаяПоделка();
	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("doctor");
	ПараметрыКоманды.Добавить("--packagedef");
	ПараметрыКоманды.Добавить("./tests/fixtures/ПроектДляАнализа/packagedef");
	ПараметрыКоманды.Добавить("--ignore-dev");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

Функция ОжидаемыйВыводРезультатаАнализа()
	
	ОжидаемыйВывод =
	"❌ Отсутствующие пакеты в манифесте:
	|
	|   • present_in_dev_src_tests
	|     - %1\src\Классы\Класс1.os
	|   • present_in_dev_src_missing_tests
	|     - %1\src\Классы\Класс1.os
	|   • missing_manifests_present_src_tests
	|     - %1\src\Классы\Класс1.os
	|     - %1\src\Классы\Класс2.os
	|   • missing_manifests_present_src
	|     - %1\src\Классы\Класс1.os
	|   • missing_manifests_present_src_tests - dev
	|     - %1\tests\Тесты.os
	|   • missing_manifests_present_tests - dev
	|     - %1\tests\Тесты.os
	|
	|⚠  Неиспользуемые пакеты в коде:
	|
	|   • present_in_prod_tests_missing_src
	|   • present_in_prod_missing_src_tests
	|   • present_in_dev_src_missing_tests - dev
	|   • present_in_dev_missing_src_tests - dev
	| 
	|Найдено проблем: 10";

	ПодготовитьОжидаемыйВывод(ОжидаемыйВывод);

	Возврат ОжидаемыйВывод;

КонецФункции

Процедура ПодготовитьОжидаемыйВывод(ОжидаемыйВывод)

	ОжидаемыйВывод = СтрЗаменить(ОжидаемыйВывод, "\", ПолучитьРазделительПути());
	ОжидаемыйВывод = СтрШаблон(ОжидаемыйВывод, ФС.ПолныйПуть("./tests/fixtures/ПроектДляАнализа"));

КонецПроцедуры