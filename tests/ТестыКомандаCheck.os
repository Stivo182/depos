// BSLLS:LineLength-off
// BSLLS:MagicNumber-off
// BSLLS:DuplicateStringLiteral-off

#Использовать "helpers"

Перем Поделка; // Поделка
Перем ПотокВывода; // ПотокВПамяти
Перем ТекущийКаталог; // Строка

&Инициализация
Процедура Инициализация() Экспорт
	ТекущийКаталог = ТекущийКаталог();
КонецПроцедуры

&Перед
Процедура ПередКаждым() Экспорт
	ПотокВывода = ПомощникТестирования.ПерехватитьПотокВывода();
КонецПроцедуры

&После
Процедура ПослеКаждого() Экспорт
	ПомощникТестирования.ВернутьПотокВывода();
	ПомощникТестирования.УдалитьВременныеФайлы();
	УстановитьТекущийКаталог(ТекущийКаталог);
КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводЗависимостейПереданномуМанифесту() Экспорт

	// Подготовка
	ОжидаемыйВывод =
	"↑ annotations       1.3.0 → 1.3.1
	|  asserts           *     → 1.5.0
	|↑ autumn            3.2.0 → 4.3.11
	|  delegate          1.0.0 → 1.0.0
	|↑ packageinfo       0.7   → 0.8
	|↑ 1testrunner  dev  1.9.0 → 1.9.2";

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("--packagedef");
	ПараметрыКоманды.Добавить("./tests/fixtures/packagedef-another");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводЗависимостейПоМанифестуВТекущемКаталоге() Экспорт

	// Подготовка
	ОжидаемыйВывод =
	"↑ annotations       1.3.0 → 1.3.1
	|  asserts           *     → 1.5.0
	|↑ autumn            3.2.0 → 4.3.11
	|  delegate          1.0.0 → 1.0.0
	|↑ packageinfo       0.7   → 0.8
	|↑ 1testrunner  dev  1.8.0 → 1.9.2";

	УстановитьТекущийКаталог("./tests/fixtures");

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводЗависимостейПоМанифестуВУказанномКаталоге() Экспорт

	// Подготовка
	ОжидаемыйВывод =
	"↑ annotations       1.3.0 → 1.3.1
	|  asserts           *     → 1.5.0
	|↑ autumn            3.2.0 → 4.3.11
	|  delegate          1.0.0 → 1.0.0
	|↑ packageinfo       0.7   → 0.8
	|↑ 1testrunner  dev  1.8.0 → 1.9.2";

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("--packagedef");
	ПараметрыКоманды.Добавить("./tests/fixtures");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводТолькоУстаревшихЗависимостей() Экспорт

	// Подготовка
	ОжидаемыйВывод =
	"↑ annotations       1.3.0 → 1.3.1
	|↑ autumn            3.2.0 → 4.3.11
	|↑ packageinfo       0.7   → 0.8
	|↑ 1testrunner  dev  1.8.0 → 1.9.2";

	УстановитьТекущийКаталог("./tests/fixtures");

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("-d");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводЗависимостейСПоследнимиВерсиями() Экспорт

	// Подготовка
	ОжидаемыйВывод =
	"↑ annotations       1.3.0 → 1.3.1
	|  asserts           *     → 1.5.0
	|↑ autumn            3.2.0 → 4.3.11
	|  delegate          1.0.0 → 1.0.0
	|↑ packageinfo       0.7   → 0.8
	|↑ 1testrunner  dev  1.8.0 → 1.9.2";

	УстановитьТекущийКаталог("./tests/fixtures");

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("-t");
	ПараметрыКоманды.Добавить("latest");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводЗависимостейСМинорнымиВерсиями() Экспорт

	// Подготовка
	ОжидаемыйВывод = 
	"↑ annotations       1.3.0 → 1.3.1
	|  asserts           *     → 1.5.0
	|↑ autumn            3.2.0 → 3.3.0
	|  delegate          1.0.0 → 1.0.0
	|↑ packageinfo       0.7   → 0.8
	|↑ 1testrunner  dev  1.8.0 → 1.9.2";

	УстановитьТекущийКаталог("./tests/fixtures");

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("-t");
	ПараметрыКоманды.Добавить("minor");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводЗависимостейСПатчВерсиями() Экспорт

	// Подготовка
	ОжидаемыйВывод = 
	"↑ annotations       1.3.0 → 1.3.1
	|  asserts           *     → 1.5.0
	|  autumn            3.2.0 → 3.2.0
	|  delegate          1.0.0 → 1.0.0
	|  packageinfo       0.7   → 0.7
	|  1testrunner  dev  1.8.0 → 1.8.0";

	УстановитьТекущийКаталог("./tests/fixtures");

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("-t");
	ПараметрыКоманды.Добавить("patch");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводЗависимостейПоФильтру() Экспорт

	// Подготовка
	ОжидаемыйВывод = 
	"↑ annotations       1.3.0 → 1.3.1
	|  asserts           *     → 1.5.0
	|↑ autumn            3.2.0 → 4.3.11";

	УстановитьТекущийКаталог("./tests/fixtures");

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("-f");
	ПараметрыКоманды.Добавить("a*");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводТекстаНеНайденыЗависимости() Экспорт

	// Подготовка
	ОжидаемыйВывод = "Не найдены зависимости по заданным условиям";

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("--packagedef");
	ПараметрыКоманды.Добавить("./tests/fixtures/packagedef-no-deps");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ПроверитьВыводОшибкиНеНайденФайлМанифестаВТекущемКаталоге() Экспорт

	// Подготовка
	ОжидаемыйВывод = "Не найден файл манифеста в текущем каталоге";

	УстановитьТекущийКаталог("./tests");

	Поделка = ПомощникТестирования.ОтладочнаяПоделка();
	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	ТекстВывода = ПомощникТестирования.ПолучитьТекстИзПотокаВывода(ПотокВывода);

	Ожидаем.Что(ТекстВывода).Содержит(ОжидаемыйВывод);

КонецПроцедуры

&Тест
Процедура ТестДолжен_ВывестиИзмененияЗависимостейВJson() Экспорт

	// Подготовка
	УстановитьТекущийКаталог("./tests/fixtures");

	ФайлВывода = ПомощникТестирования.СоздатьВременныйФайл("json");

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	КонсольноеПриложение = Поделка.НайтиЖелудь("КонсольноеПриложение");

	ПараметрыКоманды = Новый Массив();
	ПараметрыКоманды.Добавить("check");
	ПараметрыКоманды.Добавить("--output");
	ПараметрыКоманды.Добавить(ФайлВывода);

	// Действие
	КонсольноеПриложение.Запустить(ПараметрыКоманды);

	// Проверка
	Ожидаем.Что(ФС.ФайлСуществует(ФайлВывода)).ЭтоИстина();

	ЧтениеТекста = Новый ЧтениеТекста(ФайлВывода, "UTF-8");
	СтрокаJson = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	Десериализатор = Новый ДесериализаторJson();
	ПроверяемыйОбъект = Десериализатор.Десериализовать(СтрокаJson);

	Ожидаем.Что(ПроверяемыйОбъект).ИмеетТип("Массив");
	Ожидаем.Что(ПроверяемыйОбъект).ИмеетДлину(6);

	Ожидаем.Что(ПроверяемыйОбъект[0].packageName, "[0].packageName").Равно("annotations");
	Ожидаем.Что(ПроверяемыйОбъект[0].isDev, "[0].isDev").Равно(Ложь);
	Ожидаем.Что(ПроверяемыйОбъект[0].minVersionBefore, "[0].minVersionBefore").Равно("1.3.0");
	Ожидаем.Что(ПроверяемыйОбъект[0].minVersionAfter, "[0].minVersionAfter").Равно("1.3.1");
	Ожидаем.Что(ПроверяемыйОбъект[0].maxVersion, "[0].maxVersion").Равно("");

	Ожидаем.Что(ПроверяемыйОбъект[1].packageName, "[1].packageName").Равно("asserts");
	Ожидаем.Что(ПроверяемыйОбъект[1].isDev, "[1].isDev").Равно(Ложь);
	Ожидаем.Что(ПроверяемыйОбъект[1].minVersionBefore, "[1].minVersionBefore").Равно("");
	Ожидаем.Что(ПроверяемыйОбъект[1].minVersionAfter, "[1].minVersionAfter").Равно("1.5.0");
	Ожидаем.Что(ПроверяемыйОбъект[1].maxVersion, "[1].maxVersion").Равно("");

	Ожидаем.Что(ПроверяемыйОбъект[2].packageName, "[2].packageName").Равно("autumn");
	Ожидаем.Что(ПроверяемыйОбъект[2].isDev, "[2].isDev").Равно(Ложь);
	Ожидаем.Что(ПроверяемыйОбъект[2].minVersionBefore, "[2].minVersionBefore").Равно("3.2.0");
	Ожидаем.Что(ПроверяемыйОбъект[2].minVersionAfter, "[2].minVersionAfter").Равно("4.3.11");
	Ожидаем.Что(ПроверяемыйОбъект[2].maxVersion, "[2].maxVersion").Равно("4.4.1");

	Ожидаем.Что(ПроверяемыйОбъект[3].packageName, "[3].packageName").Равно("delegate");
	Ожидаем.Что(ПроверяемыйОбъект[3].isDev, "[3].isDev").Равно(Ложь);
	Ожидаем.Что(ПроверяемыйОбъект[3].minVersionBefore, "[3].minVersionBefore").Равно("1.0.0");
	Ожидаем.Что(ПроверяемыйОбъект[3].minVersionAfter, "[3].minVersionAfter").Равно("1.0.0");
	Ожидаем.Что(ПроверяемыйОбъект[3].maxVersion, "[3].maxVersion").Равно("");

	Ожидаем.Что(ПроверяемыйОбъект[4].packageName, "[4].packageName").Равно("packageinfo");
	Ожидаем.Что(ПроверяемыйОбъект[4].isDev, "[4].isDev").Равно(Ложь);
	Ожидаем.Что(ПроверяемыйОбъект[4].minVersionBefore, "[4].minVersionBefore").Равно("0.7");
	Ожидаем.Что(ПроверяемыйОбъект[4].minVersionAfter, "[4].minVersionAfter").Равно("0.8");
	Ожидаем.Что(ПроверяемыйОбъект[4].maxVersion, "[4].maxVersion").Равно("");

	Ожидаем.Что(ПроверяемыйОбъект[5].packageName, "[5].packageName").Равно("1testrunner");
	Ожидаем.Что(ПроверяемыйОбъект[5].isDev, "[5].isDev").Равно(Истина);
	Ожидаем.Что(ПроверяемыйОбъект[5].minVersionBefore, "[5].minVersionBefore").Равно("1.8.0");
	Ожидаем.Что(ПроверяемыйОбъект[5].minVersionAfter, "[5].minVersionAfter").Равно("1.9.2");
	Ожидаем.Что(ПроверяемыйОбъект[5].maxVersion, "[5].maxVersion").Равно("");

КонецПроцедуры