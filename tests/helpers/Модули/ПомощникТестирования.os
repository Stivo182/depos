// BSLLS:ExportVariables-off

#Использовать autumn
#Использовать autumn-cli
#Использовать asserts
#Использовать tempfiles
#Использовать fs
#Использовать "../../../src/core"
#Использовать "../../../src/internal"
#Использовать "../../../src/cmd"
#Использовать "../../mocks"

Перем ФайлМанифеста Экспорт; // Строка
Перем ФайлОбновленногоМанифеста Экспорт; // Строка

Перем МенеджерВременныхФайлов; // МенеджерВременныхФайлов

Функция СоздатьВременнуюКопиюФайла(Путь) Экспорт
	ВременныйФайл = МенеджерВременныхФайлов.СоздатьФайл();
	КопироватьФайл(Путь, ВременныйФайл);
	Возврат ВременныйФайл;
КонецФункции

Процедура УдалитьВременныеФайлы() Экспорт
	МенеджерВременныхФайлов.Удалить();
КонецПроцедуры

Процедура ОжидаемЧтоФайлыИдентичны(ФайлПроверяемый, ФайлОжидаемый, Сообщение = "") Экспорт
	Ожидаем.Что(СодержимоеФайла(ФайлПроверяемый), Сообщение).Равно(СодержимоеФайла(ФайлОжидаемый));
КонецПроцедуры

Функция СодержимоеФайла(Файл) Экспорт
	ЧтениеТекста = Новый ЧтениеТекста(Файл);
	Содержимое = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	Возврат Содержимое;
КонецФункции

Функция ПерехватитьПотокВывода() Экспорт

	ПотокВывода = Новый ПотокВПамяти();
	Консоль.УстановитьПотокВывода(ПотокВывода);

	Возврат ПотокВывода;

КонецФункции

Процедура ВернутьПотокВывода() Экспорт
	Консоль.УстановитьПотокВывода(Консоль.ОткрытьСтандартныйПотокВывода());
КонецПроцедуры

Функция ПолучитьТекстИзПотокаВывода(ПотокВывода) Экспорт

	Консоль.УстановитьПотокВывода(Консоль.ОткрытьСтандартныйПотокВывода());

	ПотокВывода.Перейти(0, ПозицияВПотоке.Начало);
	ЧтениеТекста = Новый ЧтениеТекста(ПотокВывода, Консоль.КодировкаВыходногоПотока);

	ТекстВывода = ЧтениеТекста.Прочитать();
	ТекстВывода = СтрЗаменить(ТекстВывода, Символы.ВК, "");
	ТекстВывода = СтрЗаменить(ТекстВывода, Символ(26), "→");

	ПотокВывода.Закрыть();

	Возврат ТекстВывода;
	
КонецФункции

Функция ПолучитьОригинальныйЖелудь(Поделка, Имя) Экспорт

	Желудь = Поделка.НайтиЖелудь(Имя);
	Если ТипЗнч(Желудь) = Тип(Имя) Тогда
		Возврат Желудь;
	КонецЕсли;

	Рефлектор = Новый Рефлектор();

	ИнициализированныеЖелудиОдиночки = Рефлектор.ПолучитьСвойство(Поделка, "ИнициализированныеЖелудиОдиночки");
	ИнициализированныеЖелудиОдиночки.Удалить(Имя);

	ФабрикаЖелудей = Рефлектор.ПолучитьСвойство(Поделка, "ФабрикаЖелудей");

	ОпределенияЖелудейПоИмени = Рефлектор.ПолучитьСвойство(ФабрикаЖелудей, "ОпределенияЖелудейПоИмени");
	ОпределенияЖелудейПоИмени.Удалить(Имя);
	
	ФабрикаЖелудей.ДобавитьЖителяЛеса(Тип(Имя), "", "Желудь");

	Возврат Поделка.НайтиЖелудь(Имя);

КонецФункции

Функция ОтладочнаяПоделка() Экспорт

	Поделка = Новый Поделка();
	Поделка.ЗапуститьПриложение();

	НастройкиПриложения = Поделка.НайтиЖелудь("НастройкиПриложения");
	НастройкиПриложения.РежимОтладки = Истина;

	Возврат Поделка;

КонецФункции

МенеджерВременныхФайлов = Новый МенеджерВременныхФайлов();
ФайлМанифеста = "./tests/fixtures/packagedef";
ФайлОбновленногоМанифеста = "./tests/fixtures/packagedef-verified-latest";