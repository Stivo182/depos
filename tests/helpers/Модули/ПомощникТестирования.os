
#Использовать asserts
#Использовать tempfiles

Перем ФайлМанифеста Экспорт; // Строка
Перем ФайлОбновленногоМанифеста Экспорт; // Строка

Перем МенеджерВременныхФайлов;

Функция СоздатьВременнуюКопиюФайла(Путь) Экспорт
	ВременныйФайл = МенеджерВременныхФайлов.СоздатьФайл();
	КопироватьФайл(Путь, ВременныйФайл);
	Возврат ВременныйФайл;
КонецФункции

Процедура УдалитьВременныеФайлы() Экспорт
	МенеджерВременныхФайлов.Удалить();
КонецПроцедуры

Процедура ОжидаемЧтоФайлыИдентичны(ФайлПроверяемый, ФайлОжидаемый, Сообщение = "") Экспорт
	Ожидаем.Что(СодержимоеФайла(ФайлПроверяемый), Сообщение).Равно(СодержимоеФайла(ФайлОжидаемый));
КонецПроцедуры

Функция СодержимоеФайла(Файл) Экспорт
	ЧтениеТекста = Новый ЧтениеТекста(Файл);
	Содержимое = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
	Возврат Содержимое;
КонецФункции

Функция ПерехватитьПотокВывода() Экспорт

	ПотокВывода = Новый ПотокВПамяти();
	Консоль.УстановитьПотокВывода(ПотокВывода);

	Возврат ПотокВывода;

КонецФункции

Процедура ВернутьПотокВывода() Экспорт
	Консоль.УстановитьПотокВывода(Консоль.ОткрытьСтандартныйПотокВывода());
КонецПроцедуры

Функция ПолучитьТекстИзПотокаВывода(ПотокВывода) Экспорт

	Консоль.УстановитьПотокВывода(Консоль.ОткрытьСтандартныйПотокВывода());
	
	ТекстВывода = ПолучитьСтрокуИзДвоичныхДанных(
		ПотокВывода.ЗакрытьИПолучитьДвоичныеДанные(),
		Консоль.КодировкаВыходногоПотока
	);

	ТекстВывода = СтрЗаменить(ТекстВывода, Символы.ВК, "");
	ТекстВывода = СтрЗаменить(ТекстВывода, Символ(26), "→");

	Возврат ТекстВывода;
	
КонецФункции

МенеджерВременныхФайлов = Новый МенеджерВременныхФайлов();
ФайлМанифеста = "./tests/fixtures/packagedef";
ФайлОбновленногоМанифеста = "./tests/fixtures/packagedef-verified-latest";